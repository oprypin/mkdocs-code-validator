name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: '0 6 * * 6'
defaults:
  run:
    shell: bash
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: '^3.9'
            os: macos-latest
          - python: 3.8
            os: ubuntu-latest
          - python: 3.6
            os: windows-latest
          - python: 3.6
            os: ubuntu-latest
            versions: minimal
    runs-on: ${{matrix.os}}
    steps:
      - name: Download source
        uses: actions/checkout@v2
      - name: Install Python
        id: python
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python}}
      - name: Pin to lowest versions
        if: matrix.versions == 'minimal'
        run: |
          sed -i -E 's/"(\^|>=)([0-9])/"==\2/' pyproject.toml
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{matrix.os}}-py${{steps.python.outputs.python-version}}-${{hashFiles('pyproject.toml')}}
          restore-keys: venv-${{matrix.os}}-py${{steps.python.outputs.python-version}}-
      - name: Create virtualenv
        run: |
          python -m venv .venv
          py=($(pwd)/.venv/*/python*); dirname $py >>$GITHUB_PATH
      - name: Install packages
        run: |
          python -m pip install -U pip'>=19'; pip install -U wheel
          pip install -U . $(awk '/^$/ {p = 0}  ! /${{runner.os}}/ { if (p) {print $1} }  /dev-dependencies/ {p = 1}' pyproject.toml)
      - name: Test
        run: |
          .tools/ci.sh with_groups
      - name: Check formatting
        if: matrix.versions == null
        run: |
          git diff --exit-code
